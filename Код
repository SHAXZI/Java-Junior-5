import socket
import threading

# Настройки сервера
HOST = '127.0.0.1'
PORT = 12345

# Список клиентов
clients = []

def broadcast(message, sender_client):
    """Рассылает сообщение всем клиентам, кроме отправителя."""
    for client in clients:
        if client != sender_client:
            try:
                client.send(message)
            except:
                client.close()
                clients.remove(client)

def handle_client(client):
    """Обрабатывает сообщения от клиента."""
    while True:
        try:
            message = client.recv(1024)
            if message:
                print(f"Получено сообщение: {message.decode('utf-8')}")
                broadcast(message, client)
            else:
                break
        except:
            clients.remove(client)
            client.close()
            break

def start_server():
    """Запускает сервер и принимает подключения клиентов."""
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((HOST, PORT))
    server.listen()

    print(f"Сервер запущен на {HOST}:{PORT}")

    while True:
        client, address = server.accept()
        print(f"Подключен клиент: {address}")
        clients.append(client)
        thread = threading.Thread(target=handle_client, args=(client,))
        thread.start()

if __name__ == "__main__":
    start_server()
import socket
import threading

# Настройки клиента
HOST = '127.0.0.1'
PORT = 12345

def receive_messages(client):
    """Получает сообщения от сервера."""
    while True:
        try:
            message = client.recv(1024).decode('utf-8')
            if message:
                print(message)
        except:
            print("Соединение с сервером потеряно.")
            client.close()
            break

def send_messages(client):
    """Отправляет сообщения серверу."""
    while True:
        message = input('')
        client.send(message.encode('utf-8'))

def start_client():
    """Подключается к серверу и запускает процессы отправки/получения сообщений."""
    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client.connect((HOST, PORT))

    # Поток для получения сообщений
    receive_thread = threading.Thread(target=receive_messages, args=(client,))
    receive_thread.start()

    # Поток для отправки сообщений
    send_thread = threading.Thread(target=send_messages, args=(client,))
    send_thread.start()

if __name__ == "__main__":
    start_client()
